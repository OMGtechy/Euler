// https://projecteuler.net/problem=2
// Even Fibonacci numbers
// Problem 2
//
// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even - valued terms.

#include <cstdint>
#include <iostream>

constexpr int64_t solution(const int64_t limit) {
	int64_t nMinus2Value = 1;
	int64_t nMinus1Value = 2;
	int64_t sumOfEvens = 2;

	do {
		const auto nextValue = nMinus1Value + nMinus2Value;
		nMinus2Value = nMinus1Value;
		nMinus1Value = nextValue;

		if (nextValue % 2 == 0) {
			sumOfEvens += nextValue;
		}
	} while (nMinus1Value <= limit);

	return sumOfEvens;
}

int main() {
	// values <= 34, as per question:
	// 1, 2, 3, 5, 8, 13, 21, 34
	// even values:
	// 2, 8, 34
	// therefore, answer should be 2 + 8 + 34 = 44
	static_assert(solution(34) == 44);

	std::cout << solution(4000000) << std::endl;
}